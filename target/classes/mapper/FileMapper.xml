<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcv.mapper.FileMapper">
    <resultMap id="BaseResultMap" type="com.vcv.model.LearningFile">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="scan_point" property="scanPoint" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="INTEGER"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="barcode" property="barcode" jdbcType="VARCHAR"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="cid" property="cid" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
        <result column="category_name" property="categoryName" jdbcType="VARCHAR"/>
        <result column="file_url" property="fileUrl" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT * from tb_file where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT * from tb_file
    </select>
    
    <select id="list" resultMap="BaseResultMap" parameterType="com.vcv.model.LearningFile">
        SELECT i.* , t.name as categoryName FROM tb_file i LEFT JOIN tb_category t ON i.cid = t.id WHERE i.status = 1
        <if test="title != null">
            AND title LIKE concat('%', #{title, jdbcType=VARCHAR}, '%')
        </if>
        <if test="cid != 0">
            AND cid = #{cid, jdbcType=INTEGER}
        </if>
        <if test="minPrice != null and maxPrice != null">
            AND price BETWEEN #{minPrice, jdbcType=INTEGER} AND #{maxPrice, jdbcType=INTEGER}
        </if>
        ORDER BY updated desc
        limit #{start, jdbcType=INTEGER},#{end, jdbcType=INTEGER}
    </select>

    <select id="listS" resultMap="BaseResultMap" parameterType="com.vcv.model.LearningFile">
        SELECT i.* , t.name as categoryName FROM tb_file i LEFT JOIN tb_category t ON i.cid = t.id WHERE i.status = 1
        <if test="title != null">
            AND title LIKE concat('%', #{title, jdbcType=VARCHAR}, '%')
        </if>
        <if test="cid != 0">
            AND cid = #{cid, jdbcType=INTEGER}
        </if>
        <if test="minNum != null and maxNum != null">
            AND num BETWEEN #{minNum, jdbcType=INTEGER} AND #{maxNum, jdbcType=INTEGER}
            ORDER BY num
        </if>
        limit #{start, jdbcType=INTEGER},#{end, jdbcType=INTEGER}
    </select>

    <select id="count" resultType="java.lang.Integer" parameterType="com.vcv.model.LearningFile">
        SELECT count(*) from tb_file i LEFT JOIN tb_category t ON i.cid = t.id WHERE i.status = 1
        <if test="title != null">
            AND title LIKE concat('%', #{title, jdbcType=VARCHAR}, '%')
        </if>
        <if test="cid != 0">
            AND cid = #{cid, jdbcType=INTEGER}
        </if>

        <if test="minPrice != null and maxPrice != null">
            AND price BETWEEN #{minPrice, jdbcType=INTEGER} AND #{maxPrice, jdbcType=INTEGER}
            ORDER BY price
        </if>
    </select>
    <insert id="insert" parameterType="com.vcv.model.LearningFile" useGeneratedKeys="true" keyProperty="id">
         INSERT INTO tb_file (title, scan_point, price, num, barcode, image, cid, status, created, updated,file_url)
         VALUE (
         #{title, jdbcType=VARCHAR},
         #{scanPoint, jdbcType=VARCHAR},
         #{price, jdbcType=INTEGER},
         #{num, jdbcType=INTEGER},
         #{barcode, jdbcType=VARCHAR},
         #{image, jdbcType=VARCHAR},
         #{cid, jdbcType=INTEGER},
         1,
         #{created, jdbcType=TIMESTAMP},
         #{updated, jdbcType=TIMESTAMP},
         #{fileUrl, jdbcType=VARCHAR}
          )
    </insert>

    <update id="update" parameterType="com.vcv.model.LearningFile">
        UPDATE tb_file SET
        <if test="title != null">
            title = #{title, jdbcType=VARCHAR},
        </if>
        <if test="scanPoint != null">
            scan_point= #{scanPoint, jdbcType=VARCHAR},
        </if>
        <if test="price != null">
            price = #{price, jdbcType=INTEGER},
        </if>
        <if test="num != null">
            num = #{num, jdbcType=INTEGER},
        </if>
        <if test="cid != null">
            cid = #{cid, jdbcType=INTEGER},
        </if>
        <if test="updated != null">
            updated = #{updated, jdbcType=TIMESTAMP},
        </if>
        <if test="image != null">
            image = #{image, jdbcType=VARCHAR},in
        </if>
         <if test="fileUrl != null">
            file_url= #{fileUrl, jdbcType=VARCHAR}
        </if>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>
    <delete id="delete" parameterType="com.vcv.model.LearningFile">
        DELETE FROM tb_file WHERE id = #{id, jdbcType=INTEGER}
    </delete>
    
     <select id="getPathById" resultType="java.lang.String" parameterType="java.lang.String">
		select file_url from tb_file where id = #{fileId}
    </select>
    
</mapper>