#设置端口号
server.port=7001


#DataBase start
spring.datasource.url=jdbc:mysql://203.195.184.232/manage?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.username=vcvshop
spring.datasource.password=!QAZ2wsx3
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#DataBase end
#jdbc:mysql://203.195.184.232:3306/dev?characterEncoding=utf8
druid.url=jdbc:mysql://203.195.184.232/manage?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
druid.username=vcvshop
druid.password=!QAZ2wsx3
driver-class-name=com.mysql.jdbc.Driver


# mongodb start
spring.data.mongodb.uri=mongodb://203.195.184.232:27017/admin
#spring.data.mongodb.host=203.195.184.232
#spring.data.mongodb.port=27017
#spring.data.mongodb.username=mongo-admin
#spring.data.mongodb.password=123456
#spring.data.mongodb.authentication-database=admin


#mybatis start
mybatis.config-location=classpath:/mybatis-config.xml
#mybatis end


#thymeleaf start
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.suffix=.html
#thymeleaf end

#uploadFileSize start
spring.http.multipart.enabled=false
spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=100Mb
#uploadFileSize end

##集成mybatis
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml

spring.mail.host=smtp.exmail.qq.com
spring.mail.username=test@qq.com
spring.mail.password=test
spring.mail.from=test@qq.com

#redis
redis.host=203.195.184.232
redis.port=6379
redis.timeout=10
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500


#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092

#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer



